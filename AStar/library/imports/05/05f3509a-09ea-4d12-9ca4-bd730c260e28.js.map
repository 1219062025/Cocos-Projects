{"version":3,"sources":["assets\\script\\util\\AStar.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["const { ccclass, property } = cc._decorator;\r\n\r\nexport class Point {\r\n    x: number;\r\n    y: number;\r\n    constructor(x: number, y: number) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n    G:number = 0;   //G = 从起点A，沿着产生的路径，移动到网格上指定方格的移动耗费。\r\n    H:number = 0;   //H = 从网格上那个方格移动到终点B的预估移动耗费\r\n    F:number = 0;   //F = G + H\r\n    father:Point = null;   //这个点的上一个点，通过回溯可以找到起点 \r\n    is_close:boolean = false;   //是否关闭搜索\r\n}\r\n\r\n@ccclass\r\nexport default class AStar extends cc.Component {\r\n\r\n    static start:Point = null;      //起点\r\n    static end:Point = null;        //终点\r\n    static map: Map<number, Point> = null;   //地图point\r\n    static size: cc.Size = null;    //地图尺寸\r\n\r\n    static arr_open:Array<Point> = [];  //开放队列\r\n    static pppp:Point = null;       //执行完寻路，它就有值了，除非没找到\r\n\r\n\r\n    /**\r\n     * 获取路线 （此寻路不走斜线）\r\n     */\r\n    static getRoute(start: Point, end: Point, map: Map<number, Point>,size: cc.Size) {\r\n        //清空上次寻路，并赋值\r\n        this.is_find = false;\r\n        this.arr_open = [];\r\n        this.pppp = null;\r\n        this.start = {...start};\r\n        this.end = {...end};\r\n        this.map = new Map<number,Point>();     \r\n        map.forEach((value, key) => {\r\n            this.map.set(key,{...value});       //map 里放的是传过来的对象，使用深拷贝\r\n        });\r\n        this.size = size;\r\n        map.get(this.start.x+this.start.y*this.size.width).G = 0;       //起点的G是0\r\n        //开始寻路\r\n        let route = new Array<Point>();\r\n        try {\r\n            this.search(this.start);     //内存不够会报错，一般是起点或终点封闭\r\n        } catch (error) {\r\n            console.error(\"位置不对\");\r\n            return route;\r\n        }\r\n        if(this.pppp){\r\n            this.getFather(this.pppp,route);\r\n        }\r\n        return route;\r\n    }\r\n\r\n    /**\r\n     * 寻路\r\n     */\r\n    static is_find = false;    //是否已经找到路线\r\n    static search(point:Point){\r\n        if(point.x==this.end.x&&point.y==this.end.y){\r\n            this.is_find = true;\r\n            this.pppp = point;\r\n            return ;\r\n        }\r\n        let arr = this.getAround(point);\r\n        arr.forEach(p => {\r\n            this.setFather(p,point);\r\n        });\r\n        //arr按照F排序 从小到大\r\n        this.arr_open.sort(this.compare);\r\n        //递归继续找\r\n        this.arr_open.forEach((pp,index,arr)=>{\r\n            if(pp.is_close){        //删除没用的\r\n                arr.splice(index,1);\r\n            }\r\n            if(!this.is_find){\r\n                this.search(pp);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 获取周围4个点，上下左右\r\n     */\r\n    static getAround(point:Point){\r\n        point.is_close = true;\r\n        let arr = new Array<Point>();\r\n        let index:number;\r\n        let p:Point;\r\n        //上\r\n        if(point.y!=0){     //到顶了，没有上\r\n            index = point.x+(point.y-1)*this.size.width;\r\n            p = this.map.get(index)\r\n            if(p&&!p.is_close){\r\n                arr.push(this.map.get(index));\r\n                this.arr_open.push(this.map.get(index));    //我也要一份\r\n            }\r\n        }\r\n        //下\r\n        if(point.y+1!=this.size.height){        //到底了，没有下\r\n            index = point.x+(point.y+1)*this.size.width;\r\n            p = this.map.get(index)\r\n            if(p&&!p.is_close){\r\n                arr.push(this.map.get(index));\r\n                this.arr_open.push(this.map.get(index));\r\n            }\r\n        }\r\n        //左\r\n        if(point.x!=0){            //同理\r\n            index = point.x-1+point.y*this.size.width;\r\n            p = this.map.get(index)\r\n            if(p&&!p.is_close){\r\n                arr.push(this.map.get(index));\r\n                this.arr_open.push(this.map.get(index));\r\n            }\r\n        }\r\n        //右\r\n        if(point.x+1!=this.size.width){             //同理\r\n            index = point.x+1+point.y*this.size.width;\r\n            p = this.map.get(index)\r\n            if(p&&!p.is_close){\r\n                arr.push(this.map.get(index));\r\n                this.arr_open.push(this.map.get(index));\r\n            } \r\n        }\r\n        return arr;\r\n    }\r\n\r\n    /**\r\n     * point换父亲,并重新计算G、H、F\r\n     */\r\n    static setFather(son:Point,father:Point){\r\n        if(!son.father||son.father.G>father.G){\r\n            son.father = father;\r\n            son.G = son.father.G+1;\r\n            son.H = Math.abs(son.x-this.end.x)+Math.abs(son.y-this.end.y);\r\n            son.F = son.G+son.H;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 比较器\r\n     */\r\n    static compare(p1:Point,p2:Point){\r\n        if(p1.F>p2.F){\r\n            return 1;\r\n        }else{\r\n            return -1;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 递归 把祖宗放进route里面\r\n     */\r\n    static getFather(point:Point,route:Array<Point>){\r\n        let father = point.father;\r\n        if(father){\r\n            this.getFather(father,route);\r\n        }\r\n        route.push(point);    \r\n    }\r\n}\r\n\r\n"]}