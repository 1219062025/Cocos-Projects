{
  "ver": "1.0.25",
  "uuid": "0e84574a-0f3b-43b4-bfae-d6951ecfc48f",
  "compiledShaders": [
    {
      "glsl1": {
        "vert": "\nprecision highp float;\nuniform mat4 cc_matViewProj;\nattribute vec3 a_position;\nattribute vec2 a_uv0;\nvarying vec2 v_uv;\nvoid main () {\n  gl_Position = cc_matViewProj * vec4(a_position, 1.0);\n  v_uv = a_uv0;\n}",
        "frag": "\nprecision highp float;\nvarying vec2 v_uv;\n#if USE_TEXTURE\nuniform sampler2D texture;\n#endif\nuniform float iTime;\nuniform float _SnowflakeAmount;\nuniform float _BlizardFactor;\nvec2 uv;\nfloat rnd(float x) {\n  return fract(sin(dot(vec2(x + 47.49, 38.2467 / (x + 2.3)), vec2(12.9898, 78.233))) * (43758.5453));\n}\nfloat drawCircle(vec2 center, float radius) {\n  return 1.0 - smoothstep(0.0, radius, length(uv - center));\n}\nvoid main () {\n  uv = v_uv;\n  gl_FragColor = vec4(0.808, 0.89, 0.918, 1.0);\n  float j;\n  for (int i = 0; i < int(_SnowflakeAmount); i++) {\n    j = float(i);\n    float speed = 0.3 + rnd(cos(j)) * (0.7 + 0.5 * cos(j / (float(_SnowflakeAmount) * 0.25)));\n    vec2 center = vec2((0.25 - uv.y) * _BlizardFactor + rnd(j) + 0.1 * cos(iTime + sin(j)), mod(sin(j) - speed * (iTime * 1.5 * (0.1 + _BlizardFactor)), 0.65));\n    gl_FragColor += vec4(0.09 * drawCircle(center, 0.001 + speed * 0.012));\n  }\n}"
      },
      "glsl3": {
        "vert": "\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nin vec3 a_position;\nin vec2 a_uv0;\nout vec2 v_uv;\nvoid main () {\n  gl_Position = cc_matViewProj * vec4(a_position, 1.0);\n  v_uv = a_uv0;\n}",
        "frag": "\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nin vec2 v_uv;\nout vec4 fragColor;\n#if USE_TEXTURE\nuniform sampler2D texture;\n#endif\nuniform Block {\n  vec2 iResolution;\n  float iTime;\n  float _SnowflakeAmount;\n  float _BlizardFactor;\n};\nvec2 uv;\nfloat rnd(float x) {\n  return fract(sin(dot(vec2(x + 47.49, 38.2467 / (x + 2.3)), vec2(12.9898, 78.233))) * (43758.5453));\n}\nfloat drawCircle(vec2 center, float radius) {\n  return 1.0 - smoothstep(0.0, radius, length(uv - center));\n}\nvoid main () {\n  uv = v_uv;\n  fragColor = vec4(0.808, 0.89, 0.918, 1.0);\n  float j;\n  for (int i = 0; i < int(_SnowflakeAmount); i++) {\n    j = float(i);\n    float speed = 0.3 + rnd(cos(j)) * (0.7 + 0.5 * cos(j / (float(_SnowflakeAmount) * 0.25)));\n    vec2 center = vec2((0.25 - uv.y) * _BlizardFactor + rnd(j) + 0.1 * cos(iTime + sin(j)), mod(sin(j) - speed * (iTime * 1.5 * (0.1 + _BlizardFactor)), 0.65));\n    fragColor += vec4(0.09 * drawCircle(center, 0.001 + speed * 0.012));\n  }\n}"
      }
    }
  ],
  "subMetas": {}
}